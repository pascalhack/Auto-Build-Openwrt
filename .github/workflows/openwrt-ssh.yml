name: openwrt-ssh
on:
  workflow_dispatch:
  repository_dispatch:
  schedule:
    - cron: 0 21 * * 5
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  REPO_NAME: openwrt
  CONFIG_FILE: N1.config
  DIY_SH: diy.sh
  TZ: Asia/Shanghai
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
       docker rmi `docker images -q`
       sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
       sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
       sudo -E apt-get update
       sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
       sudo -E apt-get -y autoremove --purge
       sudo -E apt-get clean
       sudo timedatectl set-timezone "$TZ"
    - name: Configure rclone
      run: |
        sudo curl https://rclone.org/install.sh | sudo bash
        sudo mkdir -p /home/runner/.config/rclone
        sudo cat > rclone.conf << EOF
          ${rc_rclone}
        EOF
        sudo mkdir -p /mnt/gdrive
        sudo cp rclone.conf /home/runner/.config/rclone/  
        sudo rm -rf ~/work/Auto-Build-Openwrt/Auto-Build-Openwrt/rclone.conf
        sudo rclone mount GD: /mnt/gdrive --copy-links --allow-other --allow-non-empty --umask 000 --daemon & 
    - name: Clone source code
      run: | 
         git clone --depth 1 $REPO_URL -b $REPO_BRANCH $REPO_NAME
    - name: Update & Install feeds
      run: |
        cd $REPO_NAME 
        ./scripts/feeds update -a
        ./scripts/feeds install -a
    - name: Configuration Customization - Build_N1
      run: |
        [ -e files ] && mv files $REPO_NAME/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $REPO_NAME/.config
        chmod +x $DIY_SH
        cd $REPO_NAME
        ../$DIY_SH
        make defconfig 
    - name: Download package & Compile firmware
      run: |
        cd $REPO_NAME
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;  
        make -j8 V=s
   # - name: Make img
    #  run: |
    #   git clone https://github.com/tuanqing/mknop
    #   cd mknop 
    #   cp $REPO_NAME/bin/targets/*/*/*.tar.gz openwrt
    #   sudo ./gen_openwrt -d -s 880 -k latest
     #  devices=("phicomm-n1")
      # cd out
     #  for x in ${devices[*]}; do
    #   cd $x
    #   filename=$(ls | awk -F '.img' '{print $1}')
     #  gzip *.img
    #   cd ../
     #  echo "firmware_$x=$filename" >> $GITHUB_ENV
     #  done   
   # - name: Upload firmware @ phicomm n1
     # uses: actions/upload-artifact@main
    #  with:
    #   name: ${{ env.firmware_phicomm-n1 }}
    #   path: out/phicomm-n1  

    - name: Start SSH via tmate
      uses: P3TERX/ssh2actions@main
      env:
         TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
         TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
