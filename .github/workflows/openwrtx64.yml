name: Auto-Build-Openwrtx64

on:
  workflow_dispatch:
  repository_dispatch:
  schedule:
    - cron: 0 21 * * 5

env:
  rc_rclone: ${{ secrets.RCONFIG }}
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  REPO_NAME: openwrt
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: x64.config
  DIY_SH: ${{ secrets.DIY_SH }}
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
       docker rmi `docker images -q`
       echo "Deleting files, please wait ..."
       sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php
       sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
       sudo -E apt-get update
       sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
       sudo -E apt-get -y autoremove --purge
       sudo -E apt-get clean
       sudo timedatectl set-timezone "$TZ"

    - name: Configure rclone
      run: |
        sudo curl https://rclone.org/install.sh | sudo bash
        sudo mkdir -p /home/runner/.config/rclone
        sudo cat > rclone.conf << EOF
          ${rc_rclone}
        EOF
        sudo mkdir -p /mnt/gdrive
        sudo cp rclone.conf /home/runner/.config/rclone/  
        sudo rm -rf /home/runner/work/openwrt-CI/openwrt-CI/rclone.conf
        sudo rclone mount GD: /mnt/gdrive --copy-links --allow-other --allow-non-empty --umask 000 --daemon &
    - name: Clone source code
      run: | 
         git clone --depth 1 $REPO_URL -b $REPO_BRANCH $REPO_NAME
         git clone https://github.com/tuanqing/install-program $REPO_NAME/package/install-program
         git clone https://github.com/kenzok8/small $REPO_NAME/package/lintelstm
         git clone https://github.com/esirplayground/luci-app-v2ray-server  $REPO_NAME/package/lintelstm/luci-app-v2ray-server
         git clone https://github.com/kenzok8/openwrt-packages $REPO_NAME/package/lintelstm/path
         cp $REPO_NAME/package/lintelstm/path/* $REPO_NAME/package/lintelstm
         rm -rf $REPO_NAME/package/lintelstm/path
         git clone https://github.com/kenzok8/small $REPO_NAME/package/lintelstm/path1
         cp $REPO_NAME/package/lintelstm/path1/* $REPO_NAME/package/lintelstm
         rm -rf $REPO_NAME/package/lintelstm/path1  
    - name: Update & Install feeds
      run: |
       cd $REPO_NAME 
       ./scripts/feeds update -a
       ./scripts/feeds install -a
       
    - name: Configuration Customization - Build_x64
      run: |
        cat > diy.sh << EOF
        ${DIY_SH}
        EOF
        
        mv $CONFIG_FILE $REPO_NAME/.config
        chmod +x diy.sh
        mv diy.sh $REPO_NAME/diy.sh
        cd $REPO_NAME
        ./diy.sh
        make defconfig
    - name: Download package
      run: |
        cd $REPO_NAME
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile the firmware
      run: |
        cd $REPO_NAME
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
             
    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: $REPO_NAME
        path: $REPO_NAME/bin/targets/*/*
    
    - name: Upload GD packages
      run: |
        cd openwrt/bin/packages/*
        sudo tar czvf x64-packages-`date +%Y年%m月%d日%H时%M分%S秒`.tar.gz * 
        tmp=$(find . -name "*.tar.gz")
        echo $tmp
        sudo rclone sync $tmp GD:bin/IPK
        
    - name: Upload GD x64-bin
      run: |
        cd openwrt/bin/targets/*/*
        sudo tar czvf x64-bin-`date +%Y年%m月%d日%H时%M分%S秒`.tar.gz *  
        tmp=$(find . -name "*.tar.gz")
        echo $tmp
        sudo rclone sync $tmp GD:bin/X64
    - name: packing op
      run: |
        cd openwrt
        rm -rf bin
        sudo tar czvf openwrtx64-`date +%Y年%m月%d日%H时%M分%S秒`.tar.gz *  
        tmp=$(find -name openwrtx64*)
        echo $tmp
        sudo rclone sync $tmp GD:bin/PSC 
